#include<stdio.h>
#include<string.h>
#include<stdlib.h>

#define true 1
#define false 0
#define bool int
// -1 and 0??
int a[4][4]={0},n;

void swap(int *a ,int *b)
{
	int c = *a;
	*a = *b;
	*b = c;
}



bool isFull(int n){
	int i,j;
	bool mark = true;
	for ( i = 0; i < n; ++i){
		for ( j = 0; j < n; ++j){
			if (a[i][j] == 0){
				mark = false;
				return mark;
			}
		}
	}
	return mark;
}

bool isOver(int n){
	int i,j;
	if (!isFull(n)){
		return false;
	}
	for ( i = 0; i < n; ++i){
		for ( j = 0; j < n; ++j){
			if (a[i][j] == a[i][j + 1] || a[i][j] == a[i + 1][j]){
				return false;
			}
		}
	}
	return true;
}

void fillBox(int n){
	int i, j, num;

	if (isFull(n)){
		return;
	}

	while (true){
		i = rand() % n;
		j = rand() % n;
		num = rand() % 2 == 0 ? 2 : 4;

		if (a[i][j] == 0){
			a[i][j] = num;
			break;
		}
	}
}

void up_remove_blank(){
	int i,j,k;
	for(j=0;j<4;j++){
		for(i=1;i<4;i++){
			k=i;
			while(k-1>=0&&a[k-1][j]==0){//上面的那个为空 
				swap(&a[k][j],&a[k-1][j]);
				k--;
				
			}
		}
	}
}
void down_remove_blank(){
	int i,j,k;
	for(j=0;j<4;j++){
		for(i=2;i>=0;i--){
			k=i;
			while(k+1<=3&&a[k+1][j]==0){//上面的那个为空 
				swap(&a[k][j],&a[k+1][j]);
				k++;	
			}
		}
	}
}
void left_remove_blank(){
	int i,j,k;
	for(i=0;i<4;i++){
		for(j=1;j<4;j++){
			k=j;
			while(k-1>=0&&a[i][k-1]==0){//上面的那个为空 
				swap(&a[i][k],&a[i][k-1]);
				k--;
			}	
		}
	}	
} 
void right_remove_blank(){
	int i,j,k;
	for(i=0;i<4;i++){
		for(j=2;j>=0;j--){
			k=j;
			while(k+1<=3&&a[i][k+1]==0){//上面的那个为空 
				swap(&a[i][k],&a[i][k+1]);
				k++;	
			}	
		}
	}	
}
void left(){
	int i,j;
	for(i=0;i<4;i++){
		for(j=0;j<3;j++){
			if(a[i][j]==a[i][j+1]){
				a[i][j]+=a[i][j+1];
				a[i][j+1]=0;
				left_remove_blank();
			}
		}
	}
}
void right(){
		int i,j;
	for(i=0;i<4;i++){
		for(j=3;j>=1;j--){
			if(a[i][j]==a[i][j-1]){
				a[i][j]+=a[i][j-1];
				a[i][j-1]=0;
				right_remove_blank();
			}
		}
	}
}
void up(){
	int i,j;
	for(j=0;j<4;j++){//每一列 
		for(i=0;i<3;i++){
			if(a[i][j]==a[i+1][j]){
				a[i][j]=a[i][j]+a[i+1][j];
				a[i+1][j]=0;
				//移除空格
				up_remove_blank(); 
			}
		} 
	}
}
void down(){
	int i,j;
	for(j=0;j<4;j++){//每一列 
		for(i=3;i>=1;i--){
			if(a[i][j]==a[i-1][j]){
				a[i][j]=a[i][j]+a[i-1][j];
				a[i-1][j]=0;
				//移除空格
				down_remove_blank(); 
			}
		} 
	}
}
void output(){
	int i,j;
	for(i=0;i<4;i++){
		for(j=0;j<4;j++){
			if(j==3) printf("%d\n",a[i][j]); 
			else printf("%d ",a[i][j]); 
		} 
	}
}
int main(){
	int i,j;
	bool mark;
fillBox(n);
	fillBox(n);
output();
	while(scanf("%d",&n)==1){
		for(i=0;i<4;i++){
			for(j=0;j<4;j++){
				scanf("%d",&a[i][j]); 
			} 	
		}
		if(n==0){//左 
			left_remove_blank();
			left();
			
		}else if(n==1){//右 
			right_remove_blank();
			right();
		}else if(n==2){//上 
			up_remove_blank();
			up();
			
		} else{//下 
			down_remove_blank();
			down();
		}
		output();
		
	}
	return 0;
}

